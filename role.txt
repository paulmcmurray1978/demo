{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Action": [
                "access-analyzer:ValidatePolicy",
                "acm:ListCertificates",
                "apigateway:POST",
                "apigateway:DELETE",
                "apigateway:GET",
                "apigateway:PUT",
                "apigateway:PATCH",
                "cloudformation:UpdateStack",
                "apigateway:TagResource",
                "cloudformation:CreateStack",
                "cloudformation:CreateChangeSet",
                "cloudformation:DeleteChangeSet",
                "cloudformation:ListStackResources",
                "cloudformation:DeleteStack",
                "cloudformation:DescribeChangeSet",
                "cloudformation:DescribeStackEvents",
                "cloudformation:DescribeStacks",
                "cloudformation:ListStacks",
                "cloudformation:ExecuteChangeSet",
                "cloudformation:DescribeStackResource",
                "lambda:ListVersionsByFunction",
                "lambda:PublishVersion",
                "cloudformation:ValidateTemplate",
                "cloudformation:GetTemplate",
                "cloudfront:CreateCloudFrontOriginAccessIdentity",
                "cloudfront:CreateDistribution",
                "cloudfront:CreateFunction",
                "cloudfront:CreateInvalidation",
                "cloudfront:DeleteCloudFrontOriginAccessIdentity",
                "cloudfront:DeleteDistribution",
                "cloudfront:DeleteFunction",
                "cloudfront:DescribeFunction",
                "cloudfront:GetCloudFrontOriginAccessIdentity",
                "cloudwatch:GetDashboard",
                "cloudfront:GetDistribution",
                "cloudfront:GetInvalidation",
                "cloudwatch:GetMetricData",
                "cloudwatch:ListDashboards",
                "cloudfront:ListDistributions",
                "cloudwatch:ListMetrics",
                "codecommit:ListRepositories",
                "cloudwatch:PutDashboard",
                "cloudfront:PublishFunction",
                "cloudfront:TagResource",
                "cloudfront:UpdateDistribution",
                "ec2:AuthorizeSecurityGroupEgress",
                "ec2:DescribeAvailabilityZones",
                "ec2:CreateSecurityGroup",
                "ec2:DeleteSecurityGroup",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeRouteTables",
                "ec2:DescribeSubnets",
                "ec2:DescribeVpcs",
                "ec2:DescribeVpnGateways",
                "ec2:RevokeSecurityGroupEgress",
                "ec2:DescribeVpcEndpoints",
                "iam:AttachRolePolicy",
                "iam:CreateRole",
                "iam:CreatePolicy",
                "iam:CreateServiceLinkedRole",
                "iam:DeleteRole",
                "iam:DeleteRolePermissionsBoundary",
                "iam:DeleteRolePolicy",
                "iam:DetachRolePolicy",
                "iam:GetRole",
                "iam:GetRolePolicy",
                "iam:ListRolePolicies",
                "iam:PassRole",
                "iam:PutRolePermissionsBoundary",
                "iam:PutRolePolicy",
                "kms:CreateAlias",
                "kms:CreateKey",
                "kms:CreateGrant",
                "kms:CreateCustomKeyStore",
                "kms:DescribeCustomKeyStores",
                "kms:DescribeKey",
                "kms:EnableKey",
                "kms:EnableKeyRotation",
                "kms:GenerateDataKey",
                "kms:GenerateDataKeyPair",
                "kms:GenerateDataKeyPairWithoutPlaintext",
                "kms:ListAliases",
                "kms:ListGrants",
                "kms:ListKeyPolicies",
                "kms:ListKeys",
                "kms:ListResourceTags",
                "kms:ListRetirableGrants",
                "kms:PutKeyPolicy",
                "kms:UpdateAlias",
                "kms:UpdateCustomKeyStore",
                "kms:UpdateKeyDescription",
                "kms:UpdatePrimaryRegion",
                "kms:RevokeGrant",
                "kms:DisableKey",
                "kms:DisableKeyRotation",
                "kms:GetKeyPolicy",
                "kms:GetKeyRotationStatus",
                "kms:GetParametersForImport",
                "kms:GetPublicKey",
                "kms:DeleteAlias",
                "kms:DeleteCustomKeyStore",
                "kms:DeleteImportedKeyMaterial",
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncryptFrom",
                "kms:ReEncryptTo",
                "kms:ReEncrypt",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "lambda:AddPermission",
                "lambda:CreateFunction",
                "lambda:DeleteFunction",
                "lambda:DeleteLayerVersion",
                "lambda:GetAccountSettings",
                "lambda:GetFunction",
                "lambda:GetFunctionCodeSigningConfig",
                "lambda:GetLayerVersion",
                "lambda:InvokeFunction",
                "lambda:PublishLayerVersion",
                "lambda:ListFunctions",
                "lambda:UpdateFunctionCode",
                "lambda:UpdateFunctionConfiguration",
                "lambda:tagResources",
                "logs:FilterLogEvents",
                "logs:DescribeLogGroups",
                "logs:CreateLogGroup",
                "rds:CreateDBSubnetGroup",
                "rds:CreateDBCluster",
                "rds:DeleteDBSubnetGroup",
                "rds:DeleteDBCluster",
                "rds:DescribeDBSubnetGroups",
                "rds:DescribeDBClusters",
                "rds-data:ExecuteSql",
                "rds-data:ExecuteStatement",
                "route53:ListHostedZonesByName",
                "route53:GetChange",
                "route53:GetHostedZone",
                "route53:ChangeResourceRecordSets",
                "secretsmanager:CreateSecret",
                "secretsmanager:DeleteSecret",
                "secretsmanager:GetRandomPassword",
                "secretsmanager:GetSecretValue",
                "secretsmanager:PutSecretValue",
                "s3:DeleteBucket",
                "s3:DeleteBucketPolicy",
                "s3:GetBucketLocation",
                "s3:GetBucketPolicy",
                "s3:GetBucketTagging",
                "s3:GetEncryptionConfiguration",
                "s3:GetObject",
                "logs:DescribeLogStreams",
                "s3:GetObjectTagging",
                "s3:GetAccountPublicAccessBlock",
                "s3:GetBucketPublicAccessBlock",
                "s3:GetBucketPolicyStatus",
                "s3:GetBucketAcl",
                "s3:ListAccessPoints",
                "lambda:RemovePermission",
                "s3:ListBucket",
                "s3:ListAllMyBuckets",
                "s3:ListBucketVersions",
                "s3:PutBucketAcl",
                "s3:GetObjectAcl",
                "s3:DeleteObject",
                "s3:PutBucketPolicy",
                "s3:PutBucketOwnershipControls",
                "s3:PutBucketTagging",
                "s3:PutEncryptionConfiguration",
                "s3:PutObject",
                "s3:PutObjectAcl",
                "s3:CreateBucket",
                "s3:PutBucketPublicAccessBlock",
                "s3:PutAccountPublicAccessBlock",
                "s3:PutBucketVersioning",
                "s3:GetBucketWebsite",
                "s3:GetBucketOwnershipControls",
                "s3:PutBucketWebsite",
                "ssm:GetParameter",
                "waf-regional:ListWebACLs",
                "waf-regional:AssociateWebACL",
                "wafv2:ListWebACLs",
                "wafv2:AssociateWebACL",
                "sts:AssumeRoleWithWebIdentity",
                "sts:GetFederationToken",
                "logs:GetLogEvents",
                "iam:ListRoles",
                "sqs:DeleteMessage",
                "sqs:TagQueue",
                "sqs:ListQueues",
                "sqs:GetQueueUrl",
                "sqs:ListDeadLetterSourceQueues",
                "sqs:UntagQueue",
                "sqs:PurgeQueue",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:ListQueueTags",
                "sqs:CreateQueue",
                "lambda:ListTags",
                "lambda:GetLayerVersionByArn",
                "lambda:ListLayers",
                "lambda:ListLayerVersions",
                "lambda:GetFunctionConfiguration",
                "lambda:CreateEventSourceMapping"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "AllowAdminAccess"
        },
        {
            "Action": [
                "account:*",
                "billing:*",
                "savingsplans:*",
                "cur:*",
                "ce:*"
            ],
            "Resource": "*",
            "Effect": "Deny",
            "Sid": "DenyAccessToCostAndBilling"
        },
        {
            "Condition": {
                "StringEquals": {
                    "iam:PermissionsBoundary": "arn:aws:iam::105642187396:policy/ScopePermissions"
                }
            },
            "Action": [
                "iam:DeleteUserPermissionsBoundary",
                "iam:DeleteRolePermissionsBoundary"
            ],
            "Resource": [
                "arn:aws:iam::105642187396:user/*",
                "arn:aws:iam::105642187396:role/*"
            ],
            "Effect": "Deny",
            "Sid": "DenyRemovalOfPermBoundaryFromAnyUserOrRole"
        },
        {
            "Condition": {
                "StringNotEquals": {
                    "iam:PermissionsBoundary": "arn:aws:iam::105642187396:policy/ScopePermissions"
                }
            },
            "Action": [
                "iam:PutUserPermissionsBoundary",
                "iam:PutRolePermissionsBoundary"
            ],
            "Resource": [
                "arn:aws:iam::105642187396:user/*",
                "arn:aws:iam::105642187396:role/*"
            ],
            "Effect": "Deny",
            "Sid": "DenyAccessIfRequiredPermBoundaryIsNotBeingApplied"
        }
    ]
}